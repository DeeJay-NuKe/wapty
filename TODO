Stage 1:
Add Provide Response
Limit request duration to servers
Unit testing
Add req ID to editor and reject unexpected requests
Move all constant strings to actual constants
Serve the certificates on a specific fake host/patht
Default to bare sockets on error
Add/Update Doc
Improve README
UI fix that mess, use Angular, improve style.
UI work on problem "problem" of duplicate receives event
UI tabcontroller
UI add history tab
UI Sanitize metadata server-side? Rely on Angular? Cry in a corner?
UI autodetect changes in proxybuffer and merge the two "forward" buttons
UI show already pending request/response on connection
UI error log
Publish

Stage 2:
Add Save/Load
Add Scoping
Add History filter
Add Repeater
Add cURL converter
Add Intruder
Add AutoEdit

Stage 3:
UI Add Decoder
Add Spider
Add pre-engagement analysis
Add a Pathfinder feature to spider that allows to backtrace how a certain URL was discovered
Add Scanner
Add Mock Server
Add recursive intruder with flows

Misc:
Add Content-Length override?
Add Beautifier?
Decompress HTTP2 instead of disabling it?
All the deferred closes if err!= nil send that, otherwise propagate the new one
Handle panics within the package
Doc comment should be a complete sentence that starts with the name being declared.
