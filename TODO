Stage 1:
Add history metadata (with host and protocol indicator)
UI add history tab
Unit testing
Fix host header and destination
UI autodetect changes in proxybuffer and merge the two forward buttons
UI show already pending request/response on connection
UI disable buttons if no request is present
Add Drop Request/Response
Add Provide Response
Add Content Lengt fix for reqs
Default to bare sockets on error
Add/Update Doc
Add a README
Publish

Stage 2:
Add Save/Load
Add Scoping
Add Repeater
Add Intruder
Add AutoEdit

Stage 3:
UI Add Decoder
Add Spider
Add a Pathfinder feature to spider that allows to backtrace how a certain url was discovered
Add Scanner
Add Mock Server

Misc:
Add Content-Length override?
Add Beautifier?
decompress HTTP2 instead of disabling it?
all the deferred closes if err!= nil send that, otherwise propagate the new one
handle panics within the package
Doc comment should be a complete sentence that starts with the name being declared.
