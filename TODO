Stage 1:
Fix the POST hack and use websockets instead
Make ui channels buffered, don't block on ui tasks
Fix the mess in ui controller (channels can be used as keys in maps, use them)
Make ui operations unblocking and detect ui freezes/deaths. If channel is full and not being read, kill the client.
Provide a better way to close stuff, see ยง8.9
Limit request duration to servers
Unit testing
Add req ID to editor and reject unexpected requests
Move all constant strings to actual constants
Serve the certificates on a specific fake host/patht
Default to bare sockets on error
Look for fixmes and todos in the code
Add/Update Doc
Improve README
UI work on problem "problem" of duplicate receives event
UI improve history tab. Sort and show details.
UI Sanitize metadata server-side
UI autodetect changes in proxybuffer and merge the two "forward" buttons
UI show already pending request/response upon connection
UI error log
auto-open ui in browser on launch
profile
Publish

Stage 2:
Add Save/Load
Add Scoping
Add History filter
Add Repeater
Add cURL converter
Add Intruder
Add AutoEdit

Stage 3:
UI Add Decoder
Add Spider (remember to add timeouts ยง8.10)
Add pre-engagement analysis
Add a Pathfinder feature to spider that allows to backtrace how a certain URL was discovered
Add Scanner
Add Mock Server
Add recursive intruder with flows

Misc:
Add Content-Length override?
Add Beautifier?
Decompress HTTP2 instead of disabling it?
All the deferred closes if err!= nil send that, otherwise propagate the new one
Handle panics within the package
Doc comment should be a complete sentence that starts with the name being declared.
